apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-aurora-prd
  namespace: aurora
  labels:
    app.kubernetes.io/instance: rabbitmq-aurora-prd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.3
  annotations:
    meta.helm.sh/release-name: rabbitmq-aurora-prd
    meta.helm.sh/release-namespace: aurora  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq-aurora-prd
      app.kubernetes.io/name: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: rabbitmq-aurora-prd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-11.0.3
      annotations:
        checksum/config: 4d36174737059ba1220c95f5ac4cda4ea582660b4afefd710982cee010c5901d
        checksum/secret: 114ccb35c1a1893aafd09f3cc7192cee0048c89a6e25dc00714355a48f257586
    spec:
      volumes:
        - name: configuration
          secret:
            secretName: rabbitmq-aurora-prd-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
            defaultMode: 420
      containers:
        - name: rabbitmq
          image: marketplace.azurecr.io/bitnami/rabbitmq:3.11.2-debian-11-r0
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
            - name: dist
              containerPort: 25672
              protocol: TCP
            - name: stats
              containerPort: 15672
              protocol: TCP
            - name: epmd
              containerPort: 4369
              protocol: TCP
          env:
            - name: BITNAMI_DEBUG
              value: 'true'
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: rabbitmq-aurora-prd-headless
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: 'no'
            - name: RABBITMQ_NODE_NAME
              value: >-
                rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: RABBITMQ_MNESIA_DIR
              value: /bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)
            - name: RABBITMQ_LDAP_ENABLE
              value: 'no'
            - name: RABBITMQ_LOGS
              value: '-'
            - name: RABBITMQ_ULIMIT_NOFILES
              value: '65536'
            - name: RABBITMQ_USE_LONGNAME
              value: 'true'
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-aurora-prd
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: 'no'
            - name: RABBITMQ_DEFINITIONS_FILE
              value: /app/load_definition.json
            - name: RABBITMQ_SECURE_PASSWORD
              value: 'yes'
            - name: RABBITMQ_USERNAME
              value: user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-aurora-prd
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: >-
                rabbitmq_management, rabbitmq_peer_discovery_k8s,
                rabbitmq_auth_backend_ldap, rabbitmq_delayed_message_exchange,
                rabbitmq_management_agent, rabbitmq_shovel,
                rabbitmq_shovel_management, rabbitmq_web_dispatch
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - '-ec'
                - rabbitmq-diagnostics -q ping
            initialDelaySeconds: 120
            timeoutSeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - '-ec'
                - >-
                  rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics
                  -q check_local_alarms
            initialDelaySeconds: 10
            timeoutSeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            postStart:
              exec:
                command: 
                  - /bin/bash
                  - '-ec'
                  - >
                    curl -L https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.11.1/rabbitmq_delayed_message_exchange-3.11.1.ez > /opt/bitnami/rabbitmq/plugins/rabbitmq_delayed_message_exchange-3.11.1.ez
                    
                    rabbitmq-plugins enable rabbitmq_delayed_message_exchange
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-ec'
                  - >
                    if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]];
                    then
                        /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d "true"
                    else
                        rabbitmqctl stop_app
                    fi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
      dnsPolicy: ClusterFirst
      serviceAccountName: rabbitmq-aurora-prd
      serviceAccount: rabbitmq-aurora-prd
      securityContext:
        fsGroup: 1001
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: rabbitmq-aurora-prd
          app.kubernetes.io/name: rabbitmq
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: rabbitmq-aurora-prd-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
